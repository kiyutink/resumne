{"version":3,"sources":["components/page.tsx","components/shared/input.tsx","components/shared/rich-text-editor.tsx","components/sections/experience-entry.tsx","components/sections/experience-section.tsx","lib/helpers.ts","components/sections/personal-section.tsx","components/sections/summary-section.tsx","components/sections/education-entry.tsx","components/sections/education-section.tsx","components/sections/other-section.tsx","components/app.tsx","index.tsx"],"names":["Page","children","className","Input","props","useField","field","inputClassName","classNames","RichTextEditor","initialValue","apiKey","init","plugins","inline","toolbar","menubar","quickbars_insert_toolbar","quickbars_selection_toolbar","paste_as_text","value","onBlur","name","onEditorChange","onChange","withAttribution","title","href","target","rel","ExperienceEntry","onRemove","onInsert","onMoveDown","onMoveUp","onClick","ExperienceSection","form","remove","insert","move","values","map","i","companyName","companyLocation","companyDescription","position","dates","description","id","uuid","length","Email","useState","isEditing","setIsEditing","toggle","val","autoFocus","PersonalSection","SummarySection","EducationEntry","EducationSection","otherInfo","schoolName","OtherSection","App","onSubmit","initialValues","exampleData","ReactDOM","render","document","getElementById"],"mappings":"04GAGaA,G,MAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/B,OAAO,qBAAKC,UAAU,OAAf,SAAuBD,M,sECEnBE,EAGR,SAACC,GAAW,IAAD,EACEC,YAASD,GAAlBE,EADO,oBAEd,OACE,cAAC,IAAD,uCACMA,GACAF,GAFN,IAGEG,eAAgBC,IAAW,QAASJ,EAAMF,e,gBCVnCO,EAGR,SAACL,GAAW,IAAD,EACEC,YAASD,GAAlBE,EADO,oBAEd,OACE,sBAAKJ,UAAU,mBAAf,UACE,cAAC,IAAD,CACEQ,aAAa,mDACbC,OAAO,mDACPC,KAAM,CACJC,QAAS,CAAC,YAAa,OAAQ,QAAS,QAAS,SACjDC,QAAQ,EACRC,SAAS,EACTC,SAAS,EACTC,0BAA0B,EAC1BC,4BAA6B,gCAC7BC,eAAe,GAEjBC,MAAOd,EAAMc,MACbC,OAAQf,EAAMe,OAAOf,EAAMgB,MAC3BC,eAAgBjB,EAAMkB,SAASlB,EAAMgB,QAEtClB,EAAMqB,iBACL,sBACEvB,UAAU,gCACVwB,MAAM,oCAFR,uBAIa,IACX,mBACEC,KAAK,yBACLC,OAAO,SACPC,IAAI,sBAHN,yBC7BGC,EAMR,SAAC,GAAwD,IAAtDR,EAAqD,EAArDA,KAAMS,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC5C,OACE,sBAAKhC,UAAU,mBAAf,UACE,sBAAKA,UAAU,4BAAf,UACGgC,GACC,wBACEC,QAASD,EACThC,UAAU,2BACVwB,MAAM,UAHR,SAKE,mBAAGxB,UAAU,sBAGhB+B,GACC,wBACEE,QAASF,EACT/B,UAAU,2BACVwB,MAAM,YAHR,SAKE,mBAAGxB,UAAU,wBAIjB,wBACEiC,QAASJ,EACT7B,UAAU,2BACVwB,MAAM,SAHR,SAKE,mBAAGxB,UAAU,uBAEf,wBACEiC,QAASH,EACT9B,UAAU,2BACVwB,MAAM,eAHR,SAKE,mBAAGxB,UAAU,qBAIjB,sBAAKA,UAAU,8CAAf,UACE,cAAC,EAAD,CACEA,UAAU,iCACVoB,KAAI,UAAKA,EAAL,kBAEN,cAAC,EAAD,CACEpB,UAAU,qCACVoB,KAAI,UAAKA,EAAL,yBAIR,cAAC,EAAD,CACEpB,UAAU,wCACVoB,KAAI,UAAKA,EAAL,yBAEN,sBAAKpB,UAAU,uCAAf,UACE,cAAC,EAAD,CACEA,UAAU,6BACVoB,KAAI,UAAKA,EAAL,eAEN,cAAC,EAAD,CAAOpB,UAAU,0BAA0BoB,KAAI,UAAKA,EAAL,eAGjD,cAAC,EAAD,CAAgBA,KAAI,UAAKA,EAAL,sB,QClEbc,EAA8B,WACzC,IAAMd,EAAO,aACb,OACE,sBAAKpB,UAAU,qBAAf,UACE,qBAAKA,UAAU,8BAAf,wBACA,qBAAKA,UAAU,2BAAf,SACE,cAAC,IAAD,CAAYoB,KAAMA,EAAlB,SACG,gBAAGe,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,KAAzB,OACC,cAAC,WAAD,UACGH,EAAKI,OAAOnB,GAAMoB,KACjB,SACEtB,EACAuB,EACAF,GAHF,OAKE,cAAC,EAAD,CACEnB,KAAI,UAAKA,EAAL,YAAaqB,EAAb,KAEJZ,SAAU,WACRO,EAAOK,IAETX,SAAU,WACRO,EAAOI,EAAI,ECzBiC,CAChEC,YAAa,eACbC,gBAAiB,mBACjBC,mBAAoB,sBACpBC,SAAU,WACVC,MAAO,wBACPC,YAAa,mBACbC,GAAIC,iBDoBcjB,SACQ,IAANS,EACI,KACA,WACEH,EAAKG,EAAGA,EAAI,IAGpBV,WACEU,IAAMF,EAAOW,OAAS,EAClB,KACA,WACEZ,EAAKG,EAAGA,EAAI,KAlBfvB,EAAM8B,kBEhBlBG,G,MAAuD,SAAC,GAG9D,IAFL/B,EAEI,EAFJA,KACApB,EACI,EADJA,UACI,EAC8BoD,oBAAS,GADvC,mBACGC,EADH,KACcC,EADd,KAEEC,EAAS,kBAAMD,GAAa,SAACE,GAAD,OAAUA,MAFxC,EAGYrD,YAASiB,GAAlBhB,EAHH,oBAKJ,OAAIiD,EAEA,uBAAMrD,UAAU,cAAhB,UACE,cAAC,IAAD,2BACMI,GADN,IAEEqD,WAAS,EACTpD,eAAgBC,IAAW,QAAS,qBAAsBN,MAE5D,wBACEwB,MAAM,gBACNS,QAASsB,EACTvD,UAAU,sBAHZ,SAKE,mBAAGA,UAAU,qBAMjB,uBAAMA,UAAU,cAAhB,UACE,mBAAGyB,KAAI,iBAAYrB,EAAMc,OAASlB,UAAU,oBAA5C,SACGI,EAAMc,QAET,wBACEM,MAAM,sBACNS,QAASsB,EACTvD,UAAU,gDAHZ,SAKE,mBAAGA,UAAU,uBAOV0D,EAA4B,WACvC,OACE,sBAAK1D,UAAU,mBAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,EAAD,CAAOoB,KAAK,OAAOpB,UAAU,6BAE/B,qBAAKA,UAAU,wBAAf,SACE,cAAC,EAAD,CAAOoB,KAAK,UAAUpB,UAAU,gCAElC,sBAAKA,UAAU,wBAAf,UACE,cAAC,EAAD,CAAOoB,KAAK,QAAQpB,UAAU,sCAC9B,mBAAGA,UAAU,8BAAb,kBACA,cAAC,EAAD,CAAOoB,KAAK,QAAQpB,UAAU,mCC3DzB2D,G,MAA2B,WACtC,OACE,sBAAK3D,UAAU,kBAAf,UACE,qBAAKA,UAAU,2BAAf,qBACA,cAAC,EAAD,CAAgBoB,KAAK,UAAUG,iBAAe,SCJvCqC,G,YAMR,SAAC,GAAwD,IAAtDxC,EAAqD,EAArDA,KAAMS,EAA+C,EAA/CA,SAAUG,EAAqC,EAArCA,SAAUD,EAA2B,EAA3BA,WAAYD,EAAe,EAAfA,SAC5C,OACE,sBAAK9B,UAAU,kBAAf,UACE,sBAAKA,UAAU,2BAAf,UACGgC,GACC,wBACEC,QAASD,EACThC,UAAU,0BACVwB,MAAM,UAHR,SAKE,mBAAGxB,UAAU,sBAGhB+B,GACC,wBACEE,QAASF,EACT/B,UAAU,0BACVwB,MAAM,YAHR,SAKE,mBAAGxB,UAAU,wBAIjB,wBACEiC,QAASJ,EACT7B,UAAU,0BACVwB,MAAM,SAHR,SAKE,mBAAGxB,UAAU,uBAEf,wBACEiC,QAASH,EACT9B,UAAU,0BACVwB,MAAM,eAHR,SAKE,mBAAGxB,UAAU,qBAGjB,cAAC,EAAD,CACEA,UAAU,+BACVoB,KAAI,UAAKA,EAAL,iBAtCR,IAwCI,IACF,cAAC,EAAD,CACEpB,UAAU,6BACVoB,KAAI,UAAKA,EAAL,qBChDCyC,EAA6B,WACxC,IAAMzC,EAAO,YACb,OACE,sBAAKpB,UAAU,oBAAf,UACE,qBAAKA,UAAU,6BAAf,uBACA,cAAC,IAAD,CAAYoB,KAAK,YAAjB,SACG,gBAAGe,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,KAAzB,OACC,cAAC,WAAD,UACGH,EAAKI,OAAOnB,GAAMoB,KACjB,SACEtB,EACAuB,EACAF,GAHF,OAKE,cAAC,EAAD,CACEnB,KAAI,UAAKA,EAAL,YAAaqB,EAAb,KAEJZ,SAAU,WACRO,EAAOK,IAETX,SAAU,WACRO,EAAOI,EAAI,EJdiC,CAC9DO,GAAIC,cACJa,UAAW,gDACXC,WAAY,iBIaI/B,SACQ,IAANS,EACI,KACA,WACEH,EAAKG,EAAGA,EAAI,IAGpBV,WACEU,IAAMF,EAAOW,OAAS,EAClB,KACA,WACEZ,EAAKG,EAAGA,EAAI,KAlBfvB,EAAM8B,gB,QCnBhBgB,G,MAAyB,kBACpC,sBAAKhE,UAAU,gBAAf,UACE,qBAAKA,UAAU,yBAAf,mBACA,cAAC,EAAD,CAAgBoB,KAAK,eCIZ6C,EAAgB,kBAC3B,cAAC,IAAD,CAAQC,SAAU,aAAUC,cAAeC,EAA3C,SACE,cAAC,IAAD,UACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAShD,KAAK,YACd,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,YCdRiD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e7c6fbe7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./page.scss\";\n\nexport const Page: React.FC = ({ children }) => {\n  return <div className=\"page\">{children}</div>;\n};\n","import \"./input.scss\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport AutosizeInput from \"react-input-autosize\";\nimport { useField } from \"formik\";\n\nexport const Input: React.FC<{\n  className?: string;\n  name: string;\n}> = (props) => {\n  const [field] = useField(props);\n  return (\n    <AutosizeInput\n      {...field}\n      {...props}\n      inputClassName={classNames(\"input\", props.className)}\n    />\n  );\n};\n","import \"./rich-text-editor.scss\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\nexport const RichTextEditor: React.FC<{\n  name: string;\n  withAttribution?: boolean;\n}> = (props) => {\n  const [field] = useField(props);\n  return (\n    <div className=\"rich-text-editor\">\n      <Editor\n        initialValue=\"<p>This is the initial content of the editor</p>\"\n        apiKey=\"qr3ueihj1madcyxai2sffnjsu9ta0tl902v1hqux1eemjxmn\"\n        init={{\n          plugins: [\"quickbars\", \"link\", \"lists\", \"paste\", \"table\"],\n          inline: true,\n          toolbar: false,\n          menubar: false,\n          quickbars_insert_toolbar: false,\n          quickbars_selection_toolbar: \"bold italic quicklink bullist\",\n          paste_as_text: true,\n        }}\n        value={field.value}\n        onBlur={field.onBlur(field.name)}\n        onEditorChange={field.onChange(field.name)}\n      />\n      {props.withAttribution && (\n        <div\n          className=\"rich-text-editor__attribution\"\n          title=\"This won't be rendered in the pdf\"\n        >\n          Powered by{\" \"}\n          <a\n            href=\"https://www.tiny.cloud\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Tiny\n          </a>\n        </div>\n      )}\n    </div>\n  );\n};\n","import \"./experience-entry.scss\";\nimport React from \"react\";\nimport { Input } from \"../shared/input\";\nimport { RichTextEditor } from \"../shared/rich-text-editor\";\n\nexport const ExperienceEntry: React.FC<{\n  name: string;\n  onRemove: () => void;\n  onInsert: () => void;\n  onMoveUp: (() => void) | null;\n  onMoveDown: (() => void) | null;\n}> = ({ name, onRemove, onInsert, onMoveDown, onMoveUp }) => {\n  return (\n    <div className=\"experience-entry\">\n      <div className=\"experience-entry__buttons\">\n        {onMoveUp && (\n          <button\n            onClick={onMoveUp}\n            className=\"experience-entry__button\"\n            title=\"Move up\"\n          >\n            <i className=\"fas fa-caret-up\" />\n          </button>\n        )}\n        {onMoveDown && (\n          <button\n            onClick={onMoveDown}\n            className=\"experience-entry__button\"\n            title=\"Move down\"\n          >\n            <i className=\"fas fa-caret-down\" />\n          </button>\n        )}\n\n        <button\n          onClick={onRemove}\n          className=\"experience-entry__button\"\n          title=\"Remove\"\n        >\n          <i className=\"far fa-trash-alt\" />\n        </button>\n        <button\n          onClick={onInsert}\n          className=\"experience-entry__button\"\n          title=\"Insert after\"\n        >\n          <i className=\"fas fa-plus\" />\n        </button>\n      </div>\n\n      <div className=\"experience-entry__company-name-and-location\">\n        <Input\n          className=\"experience-entry__company-name\"\n          name={`${name}.companyName`}\n        />\n        <Input\n          className=\"experience-entry__company-location\"\n          name={`${name}.companyLocation`}\n        />\n      </div>\n\n      <Input\n        className=\"experience-entry__company-description\"\n        name={`${name}.companyDescription`}\n      />\n      <div className=\"experience-entry__position-and-dates\">\n        <Input\n          className=\"experience-entry__position\"\n          name={`${name}.position`}\n        />\n        <Input className=\"experience-entry__dates\" name={`${name}.dates`} />\n      </div>\n\n      <RichTextEditor name={`${name}.description`} />\n    </div>\n  );\n};\n","import \"./experience-section.scss\";\nimport React, { Fragment } from \"react\";\nimport { FieldArray } from \"formik\";\nimport { ExperienceEntry } from \"./experience-entry\";\nimport { ExperienceEntryModel } from \"../../lib/types/experience-entry-model\";\nimport { createExperienceEntry } from \"../../lib/helpers\";\n\nexport const ExperienceSection: React.FC = () => {\n  const name = \"experience\";\n  return (\n    <div className=\"experience-section\">\n      <div className=\"experience-section__heading\">Experience</div>\n      <div className=\"experience-section__list\">\n        <FieldArray name={name}>\n          {({ form, remove, insert, move }) => (\n            <Fragment>\n              {form.values[name].map(\n                (\n                  value: ExperienceEntryModel,\n                  i: number,\n                  values: ExperienceEntryModel[]\n                ) => (\n                  <ExperienceEntry\n                    name={`${name}[${i}]`}\n                    key={value.id}\n                    onRemove={() => {\n                      remove(i);\n                    }}\n                    onInsert={() => {\n                      insert(i + 1, createExperienceEntry());\n                    }}\n                    onMoveUp={\n                      i === 0\n                        ? null\n                        : () => {\n                            move(i, i - 1);\n                          }\n                    }\n                    onMoveDown={\n                      i === values.length - 1\n                        ? null\n                        : () => {\n                            move(i, i + 1);\n                          }\n                    }\n                  />\n                )\n              )}\n            </Fragment>\n          )}\n        </FieldArray>\n      </div>\n    </div>\n  );\n};\n","import { v4 as uuid } from \"uuid\";\nimport { EducationEntryModel } from \"./types/education-entry-model\";\nimport { ExperienceEntryModel } from \"./types/experience-entry-model\";\n\nexport const createExperienceEntry = (): ExperienceEntryModel => ({\n  companyName: \"Company name\",\n  companyLocation: \"Company location\",\n  companyDescription: \"Company description\",\n  position: \"Position\",\n  dates: \"start date - end date\",\n  description: \"Role description\",\n  id: uuid(),\n});\n\nexport const createEducationEntry = (): EducationEntryModel => ({\n  id: uuid(),\n  otherInfo: \"Received qualifications, Field, Year finished\",\n  schoolName: \"School name\",\n});\n","import \"./personal-section.scss\";\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport AutosizeInput from \"react-input-autosize\";\n\nimport { Input } from \"../shared/input\";\nimport { useField } from \"formik\";\n\nexport const Email: React.FC<{ name: string; className: string }> = ({\n  name,\n  className,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const toggle = () => setIsEditing((val) => !val);\n  const [field] = useField(name);\n\n  if (isEditing) {\n    return (\n      <span className=\"email-input\">\n        <AutosizeInput\n          {...field}\n          autoFocus\n          inputClassName={classNames(\"input\", \"email-input__input\", className)}\n        />\n        <button\n          title=\"Click to save\"\n          onClick={toggle}\n          className=\"email-input__button\"\n        >\n          <i className=\"fa fa-check\" />\n        </button>\n      </span>\n    );\n  } else {\n    return (\n      <span className=\"email-input\">\n        <a href={`mailto:${field.value}`} className=\"email-input__link\">\n          {field.value}\n        </a>\n        <button\n          title=\"Click to edit email\"\n          onClick={toggle}\n          className=\"email-input__button email-input__button--edit\"\n        >\n          <i className=\"far fa-edit\" />\n        </button>\n      </span>\n    );\n  }\n};\n\nexport const PersonalSection: React.FC = () => {\n  return (\n    <div className=\"personal-section\">\n      <div className=\"personal-section__row\">\n        <Input name=\"name\" className=\"personal-section__name\" />\n      </div>\n      <div className=\"personal-section__row\">\n        <Input name=\"address\" className=\"personal-section__address\" />\n      </div>\n      <div className=\"personal-section__row\">\n        <Input name=\"phone\" className=\"personal-section__phone-and-email\" />\n        <b className=\"personal-section__separator\">·</b>\n        <Email name=\"email\" className=\"personal-section__email\" />\n      </div>\n    </div>\n  );\n};\n","import \"./summary-section.scss\";\nimport React from \"react\";\nimport { RichTextEditor } from \"../shared/rich-text-editor\";\n\nexport const SummarySection: React.FC = () => {\n  return (\n    <div className=\"summary-section\">\n      <div className=\"summary-section__heading\">Summary</div>\n      <RichTextEditor name=\"summary\" withAttribution />\n    </div>\n  );\n};\n","import \"./education-entry.scss\";\nimport React from \"react\";\nimport { Input } from \"../shared/input\";\n\nexport const EducationEntry: React.FC<{\n  name: string;\n  onRemove: () => void;\n  onMoveUp: (() => void) | null;\n  onMoveDown: (() => void) | null;\n  onInsert: () => void;\n}> = ({ name, onRemove, onMoveUp, onMoveDown, onInsert }) => {\n  return (\n    <div className=\"education-entry\">\n      <div className=\"education-entry__buttons\">\n        {onMoveUp && (\n          <button\n            onClick={onMoveUp}\n            className=\"education-entry__button\"\n            title=\"Move up\"\n          >\n            <i className=\"fas fa-caret-up\" />\n          </button>\n        )}\n        {onMoveDown && (\n          <button\n            onClick={onMoveDown}\n            className=\"education-entry__button\"\n            title=\"Move down\"\n          >\n            <i className=\"fas fa-caret-down\" />\n          </button>\n        )}\n\n        <button\n          onClick={onRemove}\n          className=\"education-entry__button\"\n          title=\"Remove\"\n        >\n          <i className=\"far fa-trash-alt\" />\n        </button>\n        <button\n          onClick={onInsert}\n          className=\"education-entry__button\"\n          title=\"Insert after\"\n        >\n          <i className=\"fas fa-plus\" />\n        </button>\n      </div>\n      <Input\n        className=\"education-entry__school-name\"\n        name={`${name}.schoolName`}\n      />\n      ,{\" \"}\n      <Input\n        className=\"eduction-entry__other-info\"\n        name={`${name}.otherInfo`}\n      />\n    </div>\n  );\n};\n","import \"./education-section.scss\";\nimport React, { Fragment } from \"react\";\nimport { FieldArray } from \"formik\";\nimport { EducationEntry } from \"./education-entry\";\nimport { EducationEntryModel } from \"../../lib/types/education-entry-model\";\nimport { createEducationEntry } from \"../../lib/helpers\";\n\nexport const EducationSection: React.FC = () => {\n  const name = \"education\";\n  return (\n    <div className=\"education-section\">\n      <div className=\"education-section__heading\">Education</div>\n      <FieldArray name=\"education\">\n        {({ form, remove, insert, move }) => (\n          <Fragment>\n            {form.values[name].map(\n              (\n                value: EducationEntryModel,\n                i: number,\n                values: EducationEntryModel[]\n              ) => (\n                <EducationEntry\n                  name={`${name}[${i}]`}\n                  key={value.id}\n                  onRemove={() => {\n                    remove(i);\n                  }}\n                  onInsert={() => {\n                    insert(i + 1, createEducationEntry());\n                  }}\n                  onMoveUp={\n                    i === 0\n                      ? null\n                      : () => {\n                          move(i, i - 1);\n                        }\n                  }\n                  onMoveDown={\n                    i === values.length - 1\n                      ? null\n                      : () => {\n                          move(i, i + 1);\n                        }\n                  }\n                />\n              )\n            )}\n          </Fragment>\n        )}\n      </FieldArray>\n    </div>\n  );\n};\n","import \"./other-section.scss\";\nimport React from \"react\";\nimport { RichTextEditor } from \"../shared/rich-text-editor\";\n\nexport const OtherSection: React.FC = () => (\n  <div className=\"other-section\">\n    <div className=\"other-section__heading\">Other</div>\n    <RichTextEditor name=\"other\" />\n  </div>\n);\n","import React from \"react\";\nimport { Form, Formik } from \"formik\";\nimport { Persist } from \"formik-persist\";\nimport { Page } from \"./page\";\nimport { ExperienceSection } from \"./sections/experience-section\";\nimport { PersonalSection } from \"./sections/personal-section\";\nimport { SummarySection } from \"./sections/summary-section\";\nimport { EducationSection } from \"./sections/education-section\";\nimport exampleData from \"../example-data.json\";\nimport { OtherSection } from \"./sections/other-section\";\n\nexport const App: React.FC = () => (\n  <Formik onSubmit={() => {}} initialValues={exampleData}>\n    <Form>\n      <Page>\n        <Persist name=\"cvState\" />\n        <PersonalSection />\n        <SummarySection />\n        <ExperienceSection />\n        <EducationSection />\n        <OtherSection />\n      </Page>\n    </Form>\n  </Formik>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./global.scss\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { App } from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}